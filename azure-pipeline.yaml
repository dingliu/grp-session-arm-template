name: $(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

pool:
  vmImage: 'ubuntu-18.04'

trigger:
  paths:
    exclude:
      - local-demo/*
      - LICENSE
      - README.md

variables:
    azSrvcConn: azrm-sp
    dockerSrvcConn: dockerhub_dingliu
    dockerRepo: dingliu/hello-app
    rgName: pipeline-demo
    clusterName: hello-cluster

steps:
# Build Docker image and push it to Docker HUB
- task: Docker@2
  displayName: Login to Docker Hub
  inputs:
    command: login
    containerRegistry: $(dockerSrvcConn)
- task: Docker@2
  displayName: Build and Push hello-app
  inputs:
    command: buildAndPush
    repository: $(dockerRepo)
    Dockerfile: 'hello-app/Dockerfile'
    buildContext: 'hello-app/'
    tags: |
      $(Build.BuildNumber)
      latest
# Deploy AKS cluster
- task: AzureResourceManagerTemplateDeployment@3
  displayName: ARM template deployment
  inputs:
    deploymentScope: 'Subscription'
    azureResourceManagerConnection:
    subscriptionId: '1d2c4243-4be0-474a-b212-2cd56f17ac85'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: 'cluster-arm/template.jsonc'
    csmParametersFile: 'cluster-arm/parameters.jsonc'
    overrideParameters: '-rgName $(rgName) -clusterName $(clusterName)'
    deploymentMode: 'Incremental'
    deploymentName: $(Build.BuildNumber)
# Apply Kubernetes manifests
- task: Kubernetes@1
  displayName: Apply Deployment Manifest
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: $(azSrvcConn)
    azureResourceGroup: $(rgName)
    kubernetesCluster: $(clusterName)
    command: 'apply'
    arguments: -f cluster-manifests/helloweb-deployment.yaml
- task: Kubernetes@1
  displayName: Apply HPA Manifest
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: $(azSrvcConn)
    azureResourceGroup: $(rgName)
    kubernetesCluster: $(clusterName)
    command: 'apply'
    arguments: -f cluster-manifests/helloweb-hpa.yaml
- task: Kubernetes@1
  displayName: Apply LoadBalancer Service Manifest
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: $(azSrvcConn)
    azureResourceGroup: $(rgName)
    kubernetesCluster: $(clusterName)
    command: 'apply'
    arguments: -f cluster-manifests/helloweb-service-static-ip.yaml
- task: Kubernetes@1
  displayName: Apply Ingress Manifest
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: $(azSrvcConn)
    azureResourceGroup: $(rgName)
    kubernetesCluster: $(clusterName)
    command: 'apply'
    arguments: -f cluster-manifests/helloweb-ingress-static-ip.yaml
